{"version":3,"file":"pixpipe.js","sources":["../src/core/PixpipeObject.js","../src/core/Pipeline.js","../src/core/Filter.js","../src/core/Image2D.js","../src/core/ImageToImageFilter.js","../src/core/PixelWiseImageFilter.js","../src/io/CanvasImageWriter.js","../src/io/UrlImageReader.js","../src/io/FileImageReader.js","../src/filter/ForEachPixelImageFilter.js","../src/filter/SpectralScaleImageFilter.js","../src/pixpipe.js"],"sourcesContent":["/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\n/**\n* PixpipeObject is the base object of all. It creates a uuid and has few\n* generic attributes like type, name and description. Not all these attributes\n* always useful;\n*/\nclass PixpipeObject {\n\n  constructor(){\n    // unique identifier\n    this._uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n      return v.toString(16);\n    });\n\n    // Metadata can be anything, a name, an ID, a description, a DOM element.\n    // everything that is not an input but rather a setting\n    this._metadata = {};\n\n    this._type = PixpipeObject.TYPE();\n  }\n\n\n  /**\n  * Acces it like a static attribute.\n  * Must be overloaded.\n  */\n  static TYPE(){\n    return \"GENERIC\";\n  }\n\n\n  /**\n  * Compare a give type to the type of this object.\n  * @param {String} t - a type, better to call the static method of each object, like Image.TYPE()\n  */\n  isOfType( t ){\n    return !(this._type.localeCompare(t))\n  }\n\n\n  /**\n  * Get type of object.\n  * @return {String} the type\n  */\n  getType(){\n    this._type;\n  }\n\n  /**\n  * Return a copy of the uuid\n  */\n  get uuid(){\n    return this._uuid.slice();\n  }\n\n\n  /**\n  * Set a metadata using a pair of key and value.\n  * @param {String} key - the ID of the metadata\n  * @param {Object} value - can be a string, Number or Object\n  */\n  setMetadata( key, value ){\n    if(typeof key === 'string' || key instanceof String){\n      this._metadata[ key ] = value;\n    }else{\n      console.warn(\"The given key must be a String Object.\");\n    }\n\n  }\n\n\n  /**\n  * Retrieve a metadata using a key.\n  * @param {String} key - the ID of the metadata\n  * @return {Object} the metadata object - or null if non existent\n  */\n  getMetadata( key ){\n    if( key in this._metadata){\n      return this._metadata[ key ];\n    }else{\n      console.warn(\"The metadata with key: \" + key + \" doe not exist.\");\n      return null;\n    }\n  }\n\n\n\n\n}\n\nexport { PixpipeObject }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { PixpipeObject } from './PixpipeObject.js';\n\n/**\n* A Pipeline instance handles a cascade of filter when an input dataset is updated.\n* Using a Pipeline object is not mandatory and can be replaced by calling  `update()`.\n*/\nclass Pipeline extends PixpipeObject {\n\n  constructor(){\n    super();\n    this._type = Filter.TYPE();\n\n    // a list of filters\n    this._filters = [];\n\n    this._isUpdated = false;\n  }\n\n\n  /**\n  * Hardcode the datatype\n  */\n  static TYPE(){\n    return \"PIPELINE\";\n  }\n\n\n  /**\n  * Add a filter to the pipeline.\n  *\n  */\n  addFilter( f ){\n    this._filters.push( f );\n  }\n\n\n  /**\n  *\n  */\n  update(forceAll = false){\n\n    if( forceAll ){\n      this._forceUpdateAll();\n    }else{\n\n    }\n\n    this._isUpdated = true;\n  }\n\n\n  /**\n  * Run an update on every single filter\n  */\n  _forceUpdateAll(){\n    for(var f=0; f<this._filters.length; f++){\n      // TODO test if this particular filter must be updated\n      this._filters[p].update();\n    }\n  }\n\n\n} /* END of class Pipeline */\n\nexport { Pipeline };\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { PixpipeObject } from './PixpipeObject.js';\nimport { Pipeline } from './Pipeline.js';\n\n\n/**\n* Filter is a base class and must be inherited to be used properly.\n* A filter takes one or more Image instances as input and returns one or more\n* instances of images as output.\n* Every filter has a addInput(), a getOutput() and a update() methods.\n* Every input and output can be arranged by category, so that internaly, a filter\n* can use and output diferent kind of data.\n*/\nclass Filter extends PixpipeObject {\n\n  constructor(){\n    super();\n    this._type = Filter.TYPE();\n\n    // a bunch of event to be defined. Empty by default.\n    this._events = {};\n\n    this._inputValidator = {};\n\n    this._input = {\n      //\"0\": []\n    };\n\n    this._output = {\n      //\"0\" : []\n    };\n\n    // pipeline associated with this filter. Not mandatory.\n    this._pipeline = null;\n  }\n\n\n  /**\n  * Hardcode the datatype\n  */\n  static TYPE(){\n    return \"FILTER\";\n  }\n\n\n  /**\n  * Set an input, potentially associated to a category.\n  * @param {Image2D} inputObject - most likely an instance of Image2D but can also be HTML5 File or Image3D\n  * @param {Number} category - in case we want to get data from diferent categories.\n  */\n  addInput( inputObject, category=0){\n\n    if(category < 0 ){\n      console.warn(\"A input cannot be of category inferior to zero\");\n      return;\n    }\n\n    // the category may not exist, we create it\n    if( !(category in this._input) ){\n      this._input[category] = null;\n    }\n\n    this._input[category] = inputObject ;\n\n    // add the pipeline object if defined\n    if( this._pipeline ){\n      inputObject.setPipeline( this._pipeline );\n    }\n  }\n\n\n  /**\n  * Return outputs from a category (default category: 0)\n  * @param {Number} category - a category of output.\n  * @return {Object} or null if no output can be returned.\n  */\n  getOutput( category=0 ){\n    if( category in this._output ){\n      return this._output[ category ];\n    }else{\n      return null;\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * should noly be used by the class that inherit Filter.\n  * This is just a wraper to not access the raw _output object.\n  * @param {Image2D} imageObject - instance of an image\n  * @param {Number} category - in case we want to get data from different categories.\n  */\n  _setOutput( data, category=0 ){\n    // the category may not exist, we create it\n    if( !(category in this._output) ){\n      this._output[category] = null;\n    }\n\n    this._output[category] = data ;\n  }\n\n\n  /**\n  * Workaround to\n  */\n  _setOutput2( dataType, category=0 ){\n    var outputObject = null;\n\n    console.log(this._output);\n\n    // the category may not exist, we create it\n    if( !(category in this._output) ){\n      var outputObject = new dataType();\n      this._output[category] = outputObject;\n      console.log(\"hello\");\n    }else{\n      outputObject = this._output[category];\n      console.log(\"hello2\");\n    }\n\n    return outputObject;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * should noly be used by the class that inherit Filter.\n  * @param {Number} category - in case we want to get data from different categories.\n  * @return {Object} or null if no input can be returned\n  */\n  _getInput( category=0 ){\n    if( category in this._input ){\n      return this._input[ category ];\n    }else{\n      return null;\n    }\n  }\n\n\n  /**\n  * Validate the input data using a model defined in _inputValidator.\n  * Every class that implement Filter must implement their own _inputValidator.\n  * Not mandatory to use, still a good practice.\n  */\n  hasValidInput(){\n    var that = this;\n    var inputCategories = Object.keys( this._inputValidator );\n    var valid = true;\n\n    inputCategories.forEach( function(key){\n      valid = valid && that._getInput( key ).isOfType( that._inputValidator[ key ] )\n    });\n\n    if(!valid){\n      console.warn(\"The input is not valid.\");\n    }\n\n    return valid;\n  }\n\n\n  /**\n  * Check if all input image have the same size.\n  * @return {Boolean} true is same size, false if not.\n  */\n  hasSameSizeInput(){\n    var that = this;\n    var inputCategories = Object.keys( this._inputValidator );\n    var sameSize = true;\n\n    var widths = [];\n    var heights = [];\n\n    inputCategories.forEach( function(key){\n      widths.push( that._getInput( key ).getWidth() );\n      heights.push( that._getInput( key ).getHeight() );\n    });\n\n    // if all input have the same size\n    if(widths.length){\n      widths.sort();\n      heights.sort();\n      sameSize = (widths[ 0 ] == widths[ widths.length -1 ] ) &&\n                 (heights[ 0 ] == heights[ heights.length -1 ] );\n\n      if( !sameSize ){\n        console.warn(\"Input image do not all have the same size. Filter not valid\");\n      }\n    }\n\n    return sameSize;\n  }\n\n\n  /**\n  * MUST be implemented by the class that inherit this.\n  * Launch the process.\n  */\n  update(){\n    console.error(\"The update() method has not been written, this filter is not valid.\");\n  }\n\n\n  /**\n  * Defines a callback. By defautl, no callback is called.\n  */\n  on(eventId, callback){\n    this._events[ eventId ] = callback;\n  }\n\n\n  /**\n  * Associate a Pipeline instance to this filter. Not supposed to be called manually\n  * because it is automatically called-back when adding a filter to a pipeline.\n  * @param {Pipeline} p - Pipeline object.\n  */\n  setPipeline( p ){\n    // only if not already set.\n    if(!this._pipeline){\n      this._pipeline = p;\n\n      // set the pipeline to all input so that they can update the entire\n      // pipeline in case of modification\n      var inputCategories = Object.keys( this._inputValidator );\n      inputCategories.forEach( function(key){\n        widths.push( that._getInput( key ).setPipeline( p ) );\n      });\n\n    }\n  }\n\n\n  /**\n  * Update the whole pipeline due to an update in the filter\n  * (new input, new metadata)\n  */\n  _updatePipeline(){\n    if(this._pipeline){\n      this._pipeline.update();\n    }\n  }\n\n\n  /**\n  * @param {String} uuid - uuid to look for\n  * @return {Boolean} true if this filter uses an input with such uuid\n  */\n  hasInputWithUuid( uuid ){\n    var found = false;\n\n    var inputCategories = Object.keys( this._inputValidator );\n    inputCategories.forEach( function(key){\n      found = found | that._getInput( key ).setPipeline( p ) ;\n    });\n\n    return found;\n  }\n\n\n\n} /* END class Filter */\n\nexport { Filter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { PixpipeObject } from './PixpipeObject.js';\nimport { Pipeline } from './Pipeline.js';\n\n/**\n* Image2D class is one of the few base element of Pixpipejs.\n* It is always considered to be 4 channels (RGBA) and stored as a Float32Array\n* typed array.\n*/\nclass Image2D extends PixpipeObject{\n\n\n  /**\n  * Constructor of an Image2D instance. If no options, no array is allocated.\n  * @param {Object} options - if present, must have options.width, options.height. Also options.color = [r, g, b, a] is possible but not mandatory, this sets the default color.\n  */\n  constructor( options=null ){\n    super();\n    this._type = Image2D.TYPE();\n\n    // a rgba stored in a Float32Array (typed array)\n    this._data = null;\n    this._width = -1;\n    this._height = -1;\n    this._componentsPerPixel = 4; // RGBA, by default\n\n    // pipeline associated with this image. Not mandatory.\n    this._pipeline = null;\n\n    // allocate the array if size is specified\n    if(options && \"width\" in options && \"height\" in options){\n\n      if( options.width > 0 && options.height > 0){\n        this._width = options.width;\n        this._height = options.height;\n\n        if(\"color\" in options){\n          this._componentsPerPixel = options.color.length;\n        }\n\n        this._data = new Float32Array( this._width * this._height * this._componentsPerPixel );\n\n        // init with the given color\n        if(\"color\" in options){\n          var color = options.color;\n          for(var i=0; i<this._data.length; i++){\n            this._data[i] = color[i%this._componentsPerPixel];\n          }\n        }else{\n          this._data.fill(0);\n        }\n\n      }\n    }\n\n  }\n\n\n  /**\n  * Hardcode the datatype\n  */\n  static TYPE(){\n    return \"IMAGE2D\";\n  }\n\n\n  /**\n  * @return {Image2D} a deep copy instance of this Image2D\n  */\n  clone(){\n    var cpImg = new Image2D();\n    cpImg.setData( this._data, this._width, this._height );\n    return cpImg;\n  }\n\n\n  /**\n  *  Set the data to this Image2D.\n  * @param {Float32Array} array - 1D array of raw data stored as RGBARGBA...\n  * @param {Number} width - width of the Image2D\n  * @param {Number} height - height of the Image2D\n  * @param {Number} ncpp - number of components per pixel (default: 4)\n}\n  */\n  setData( array, width, height, ncpp=4 ){\n    /*\n    // do not allow to set a new internal array\n    if( this._data ){\n      console.warn(\"Data can be set to an Image2D object only once. Cannot init the Image2D.\");\n      return;\n    }\n    */\n\n    this._componentsPerPixel = ncpp;\n\n    if( array.length != width*height*this._componentsPerPixel){\n      console.warn(\"The array size does not match the width and height. Cannot init the Image2D.\");\n      return;\n    }\n\n    this._data = new Float32Array( array );\n    this._width = width;\n    this._height = height;\n  }\n\n\n  /**\n  * Modify the color of a given pixel.\n  * @param {Object} position - 2D position in form {x, y}\n  * @param {Array} color - color, must have the same numb of components per pix than the image\n  */\n  setPixel( position, color ){\n    if(\"x\" in position && position.x >=0 && position.x < this._width &&\n       \"y\" in position && position.y >=0 && position.y < this._height &&\n       color.length == this._componentsPerPixel)\n    {\n\n      var pos1D = this.get1dIndexFrom2dPosition( position );\n\n      for(var i=0; i<this._componentsPerPixel; i++){\n        this._data[ pos1D + i] = color[i];\n      }\n\n    }else{\n      console.error(\"x and y position have to be within the image dimensions and color size must be the same as the original image.\");\n    }\n  }\n\n\n  /**\n  * @return {Array} the color of the given pixel.\n  */\n  getPixel( position ){\n    if(\"x\" in position && position.x >=0 && position.x < this._width &&\n       \"y\" in position && position.y >=0 && position.y < this._height)\n    {\n      var pos1D = this.get1dIndexFrom2dPosition( position );\n      var color = this._data.slice(pos1D, pos1D + this._componentsPerPixel);\n      return color;\n\n    }else{\n      console.warn(\"The requested position is outside the image.\");\n      return null;\n    }\n  }\n\n\n  /**\n  * @return {Number} the width of the Image2D\n  */\n  getWidth(){\n    return this._width;\n  }\n\n\n  /**\n  * @return {Number} the height of the Image2D\n  */\n  getHeight(){\n    return this._height;\n  }\n\n\n  /**\n  * @return {Number} the number of components per pixel\n  */\n  getComponentsPerPixel(){\n    return this._componentsPerPixel;\n  }\n\n\n  /**\n  * @return {Float32Array} the original data, dont mess up with this one.\n  * in case of doubt, use  getDataCopy()\n  */\n  getData(){\n    //return this._data.slice();  // return a copy\n    return this._data;  // return the actual array, editable!\n  }\n\n\n  /**\n  * @return {Float32Array} a deep copy of the data\n  */\n  getDataCopy(){\n    return this._data.slice();\n  }\n\n\n  /**\n  * Compute the (x, y) position from a position in a 1D array.\n  * This has nothing to do with the number of components per pixel.\n  * @param {Number} i - the index of a pixel.\n  * @return {Object} coordinate as {x, y}\n  */\n  get2dPositionFrom1dIndex( i ){\n    return {\n      x: i % this._width,\n      y: Math.floor(i / this._width)\n    }\n  }\n\n\n  /**\n  * Compute the 1D index within the data buffer from a 2D position {x, y}.\n  * This has nothing to do with the number of components per pixel.\n  * @param {Object} position - 2D coord like {x, y}\n  * @return {Number} the 1D position within the buffer\n  */\n  get1dIndexFrom2dPosition( position ){\n    return (position.x + position.y*this._width);\n  }\n\n\n  /**\n  * Associate a Pipeline instance to this image. Not supposed to be called manually\n  * because it is automatically called-back when adding a filter to a pipeline.\n  * @param {Pipeline} p - Pipeline object.\n  */\n  setPipeline( p ){\n    // only if not already set.\n    if(!this._pipeline){\n      this._pipeline = p;\n    }\n  }\n\n  // TODO: warn the pipeline if metadata changed or pixel value changed\n  // --> do NOT update the pipeline at every modif because if we change a lot\n  //     of pixel values... (wait to call update() on the pipeline.)\n\n\n} /* END of class Image2D */\n\nexport { Image2D }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Filter } from './Filter.js';\nimport { Image2D } from './Image2D.js';\n\n/**\n* ImageToImageFilter is not to be used as-is but rather as a base class for any\n* filter that input a single Image2D and output a single Image2D.\n* This class does not overload the update() method.\n*/\nclass ImageToImageFilter extends Filter {\n\n  constructor(){\n    super();\n    this._inputValidator[ 0 ] = Image2D.TYPE();\n\n    // will be a copy of the input Image2D buffer\n    this._inputBuffer = null;\n  }\n\n} /* END class ImageToImageFilter */\n\nexport { ImageToImageFilter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { ImageToImageFilter } from './ImageToImageFilter.js';\n\n/**\n* PixelWiseImageFilter is not supposed to be use as is and is just to\n* be inherited by other filters.\n* This class does not overload the update() method.\n*/\nclass PixelWiseImageFilter extends ImageToImageFilter{\n\n  constructor(){\n    super();\n  }\n\n\n  /**\n  * [PRIVATE]\n  * generic function for painting row, colum or whole\n  * @param {Number} firstPixel - Index of the first pixel in 1D array\n  * @param {Number} lastPixel - Index of the last pixel in 1D array\n  * @param {Number} increment - jump gap from a pixel to another (in a 1D style)\n  */\n  _forEachPixelOfSuch(firstPixel, lastPixel, increment ){\n    // abort if no callback per pixel\n    if( ! \"pixel\" in this._events){\n      console.warn(\"No function to apply per pixel was specified.\");\n      return;\n    }\n\n    var inputImage2D = this._getInput();\n    var inputBuffer = this._inputBuffer;\n    var componentPerPixel = inputImage2D.getComponentsPerPixel();\n\n    var currentColor = null;\n\n    for(var p=firstPixel; p<lastPixel; p+=increment ){\n      var firstCompoPos1D = p * componentPerPixel;\n      var position2D = inputImage2D.get2dPositionFrom1dIndex(p);\n      currentColor = inputBuffer.slice(firstCompoPos1D, firstCompoPos1D + componentPerPixel)\n\n      var newColor = this._events.pixel( position2D, currentColor);\n\n      if(newColor && newColor.length == componentPerPixel){\n        for(var i=0; i<componentPerPixel; i++){\n          inputBuffer[firstCompoPos1D + i] = newColor[i];\n        }\n      }\n\n    }\n  }\n\n\n} /* END of class PixelWiseImageFilter */\n\nexport { PixelWiseImageFilter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { Filter } from '../core/Filter.js';\n\n/**\n* CanvasImageWriter is a filter to output an instance of Image into a\n* HTML5 canvas element.\n* The metadata \"parentDivID\" has to be set using `setMetadata(\"parentDivID\", \"whatever\")`\n* The metadata \"alpha\", if true, enable transparency. Default: false.\n* usage: examples/imageToCanvasFilter.html\n*\n* @example\n// create an image\n* var myImage = new pixpipe.Image2D({width: 100, height: 250, color: [255, 128, 64, 255]})\n*\n* // create a filter to write the image into a canvas\n* var imageToCanvasFilter = new pixpipe.CanvasImageWriter( \"myDiv\" );\n* imageToCanvasFilter.addInput( myImage );\n* imageToCanvasFilter.update();\n*/\nclass CanvasImageWriter extends Filter{\n\n  /**\n  * @param {String} parentDivID - dom id of the future canvas' parent.\n  * (most likely the ID of a div)\n  */\n  constructor(){\n    // call Filter constructor\n    super();\n\n    this._inputValidator[ 0 ] = Image2D.TYPE();\n    this.setMetadata(\"alpha\", false);\n\n    // so that we can flush the content\n    this._canvas = null;\n    this._ctx = null;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Initialize a new canvas object\n  */\n  _init(){\n\n    var parentElem = document.getElementById( this.getMetadata(\"parentDivID\") );\n    while (parentElem.firstChild) {\n        parentElem.removeChild(parentElem.firstChild);\n    }\n\n    // creating a canvas element\n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.style = \"image-rendering: pixelated;\";\n    this._ctx = this._canvas.getContext('2d');\n\n    // not sure this is useful since the style is \"pixelated\"\n    // (does not seem to well super well with Firefox)\n    this._ctx.imageSmoothingEnabled = true;\n    this._ctx.mozImageSmoothingEnabled = false;\n    this._ctx.webkitImageSmoothingEnabled = false;\n    this._ctx.ctxmsImageSmoothingEnabled = false;\n\n    document.getElementById(this.getMetadata(\"parentDivID\")).appendChild(this._canvas);\n  }\n\n\n  /**\n  * Overwrite the generic (empty) method.\n  */\n  update(){\n\n    // abort if invalid input\n    if(!this.hasValidInput() )\n      return;\n\n    var image = this._input[0];\n    var ncppSrc = image.getComponentsPerPixel();\n\n    // only Image2d with 1 or 4 bands can be displayed\n    if( ncppSrc != 1 && ncppSrc != 4){\n      console.warn(\"Cannot write Image in canvas if contains other than 1 or 4 bands.\");\n      return;\n    }\n\n    if(!this.getMetadata(\"parentDivID\")){\n      console.error(\"The parent DIV ID to place the canvas element was not specified. Unable to display anything.\");\n      return;\n    }\n\n    // build a new canvas\n    this._init();\n    var useAlphaBand = this.getMetadata(\"alpha\");\n\n    // resizing the canvas\n    this._canvas.width = image.getWidth();\n    this._canvas.height = image.getHeight();\n\n    var canvasImageData = this._ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);\n    var canvasImageDataArray = canvasImageData.data;\n\n    // getting Image object data\n    var originalImageDataArray = image.getData();\n\n    if(ncppSrc == 4){\n      // copying the data into the canvas array (clamped uint8)\n      originalImageDataArray.forEach( function(value, index){\n        if(!useAlphaBand && index%4 == 3){\n          canvasImageDataArray[index] = 255;\n        }else{\n          canvasImageDataArray[index] = value;\n        }\n      });\n\n    }else if(ncppSrc == 1){\n      originalImageDataArray.forEach( function(value, index){\n        canvasImageDataArray[index*4] = value;\n        canvasImageDataArray[index*4 + 1] = value;\n        canvasImageDataArray[index*4 + 2] = value;\n        canvasImageDataArray[index*4 + 3] = 255;\n      });\n\n    }\n\n\n\n\n\n    this._ctx.putImageData(canvasImageData, 0, 0);\n\n\n\n  }\n\n}\n\nexport { CanvasImageWriter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { Filter } from '../core/Filter.js';\n\n\n/**\n* An instance of UrlImageReader takes an image URL as input and\n* returns an Image2D as output. Use the regular `addInput()` and `getOuput()`\n* with no argument for that.\n* Reading a file from URL takes an AJAX request, which is asynchronous. For this\n* reason, what happens next, once the Image2D is created must take place in the\n* callback defined by the event .on(\"imageLoaded\", function(){ ... }).\n*\n* Usage: examples/urlToImage2D.html\n*\n* @example\n* var url2ImgFilter = new pixpipe.UrlImageReader( ... );\n* url2ImgFilter.addInput( \"images/sd.jpg\" );\n* url2ImgFilter.update();\n*/\nclass UrlImageReader extends Filter {\n\n  /**\n  * @param {function} callback - function to call when the image is loaded.\n  * The _this_ object will be in argument of this callback.\n  */\n  constructor( callback ){\n    super();\n\n    this._onReadCallback = callback;\n  }\n\n\n  /**\n  * Run the reading\n  */\n  update(){\n    var that = this;\n\n    var img = new Image();\n    img.src = this._getInput();\n\n    img.onload = function() {\n      var tmpCanvas = document.createElement(\"canvas\");\n      tmpCanvas.width = img.width;\n      tmpCanvas.height = img.height;\n      var canvasContext = tmpCanvas.getContext('2d');\n      canvasContext.drawImage(img, 0, 0);\n\n      try{\n        var imageData = canvasContext.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height);\n        var dataArray = imageData.data;\n        var img2D = new Image2D();\n        img2D.setData( dataArray, img.width, img.height);\n        that._setOutput( img2D );\n\n        if(\"imageLoaded\" in that._events){\n          that._events.imageLoaded( that )\n        }\n      }catch(e){\n        console.error(e);\n      }\n\n    };\n\n\n  }\n\n\n} /* END of class UrlImageReader */\n\nexport { UrlImageReader }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { Filter } from '../core/Filter.js';\n\n/**\n* An instance of FileImageReader takes a HTML5 File object as input and\n* returns an Image2D as output. The point is mainly to use it with a file dialog.\n* Use the regular `addInput()` and `getOuput()` with no argument for that.\n* Reading a local file is an asynchronous process. For this\n* reason, what happens next, once the Image2D is created must take place in the\n* callback defined by the event .on(\"imageLoaded\", function(){ ... }).\n*\n*\n*\n* Usage: examples/fileToImage2D.html\n*\n* @example\n* var file2ImgFilter = new pixpipe.file2ImgFilter( ... );\n* file2ImgFilter.addInput( fileInput.files[0] );\n* file2ImgFilter.update();\n*/\nclass FileImageReader extends Filter {\n\n  /**\n  * @param {function} callback - function to call when the image is loaded.\n  * The _this_ object will be in argument of this callback.\n  */\n  constructor( callback){\n    super();\n\n    this._allowedTypes = /image.*/;\n    this._onReadCallback = callback;\n  }\n\n\n  /**\n  * Overload the default method because HTML5 File is not a Pixpipe type\n  */\n  hasValidInput(){\n    var valid = false;\n    var file = this._getInput();\n\n    if (file && file.type.match( this._allowedTypes )) {\n      this._isInputValid = true;\n    }else{\n      console.error(\"The file must be an image (jpg/png). The type \" + file.type + \" is not compatible with FileImageReader.\");\n    }\n\n    return valid;\n  }\n\n\n  /**\n  * Run the reading\n  */\n  update(){\n\n    if(! this.hasValidInput)\n      return\n\n    var that = this;\n    var file = this._getInput();\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\n\t\t\tvar img = new Image();\n\t\t\timg.src = reader.result;\n      var tmpCanvas = document.createElement(\"canvas\");\n      tmpCanvas.width = img.width;\n      tmpCanvas.height = img.height;\n      var canvasContext = tmpCanvas.getContext('2d');\n      canvasContext.drawImage(img, 0, 0);\n      var imageData = canvasContext.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height);\n      var dataArray = imageData.data;\n\n      var img2D = new Image2D();\n      img2D.setData( dataArray, img.width, img.height);\n      console.log(img2D);\n      that._setOutput( img2D );\n\n      if(\"imageLoaded\" in that._events){\n        that._events.imageLoaded( that )\n      }\n\t\t}\n\n\t\treader.readAsDataURL( file );\n  }\n\n\n\n} /* END of class UrlImageReader */\n\nexport { FileImageReader }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { PixelWiseImageFilter } from '../core/PixelWiseImageFilter.js';\n\n/**\n* A filter of type ForEachPixelImageFilter can perform a operation on evey pixel\n* of an Image2D with a simple interface. For this purpose, a per-pixel-callback\n* must be specified using method\n* .on( \"pixel\" , function( coord, color ){ ... })\n* where coord is of form {x, y} and color is of form [r, g, b, a] (with possibly)\n* a different number of components per pixel.\n* This callback must return, or null (original color not modified),\n* or a array of color (same dimension as the one in arguments).\n*\n* Usage: examples/forEachPixel.html\n*\n* @example\n* var forEachPixelFilter = new pixpipe.ForEachPixelImageFilter();\n* forEachPixelFilter.on( \"pixel\", function(position, color){\n*\n*     return [\n*       color[1], // red (takes the values from green)\n*       color[0], // green (takes the values from red)\n*       color[2] * 0.5, // blue get 50% darker\n*       255 // alpha, at max\n*     ]\n*\n*   }\n* );\n*\n*/\nclass ForEachPixelImageFilter extends PixelWiseImageFilter {\n\n  constructor(){\n    super();\n  }\n\n\n  /**\n  * Run the filter\n  */\n  update(){\n    if( ! this.hasValidInput())\n      return;\n\n    var inputImage2D = this._getInput();\n    var firstPixel = 0;\n    var lastPixel = inputImage2D.getWidth() * inputImage2D.getHeight();\n    var increment = 1;\n\n    this._inputBuffer = inputImage2D.getDataCopy();\n\n    this._forEachPixelOfSuch(firstPixel, lastPixel, increment );\n\n    // TODO : find a way NOT to replace the ouput pointer so that the following\n    // filter can use the same object when refreshed by the pipeline\n    /*\n    // maybe using this kind of thing:\n    var anObjType = Image2D;\n    var im = new anObjType();\n    console.log(im);\n    */\n\n    /*\n    // building the output\n    var img2D = new Image2D();\n    img2D.setData( this._inputBuffer, inputImage2D.getWidth(), inputImage2D.getHeight(), inputImage2D.getComponentsPerPixel());\n    this._setOutput( img2D );\n    */\n\n    var outputImg = this._setOutput2( Image2D );\n    console.log(outputImg);\n    outputImg.setData(\n      this._inputBuffer,\n      inputImage2D.getWidth(),\n      inputImage2D.getHeight(),\n      inputImage2D.getComponentsPerPixel()\n    );\n\n  }\n\n} /* END class ForEachPixelImageFilter */\n\nexport { ForEachPixelImageFilter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { ImageToImageFilter } from '../core/ImageToImageFilter.js';\n\n/**\n* Multiply an image by the other, like a scaling function.\n* The image requires two inputs named \"0\" and \"1\".\n* Simply use `addInput( myImg1, \"0\" )`\n* and `addInput( myImg2, \"1\" )`. The input \"0\" can have 1 or more bands while\n* the input \"1\" can have only one band since the same scale is apply to each band.\n*\n* usage: examples/forEachPixelGadient.html\n*/\nclass SpectralScaleImageFilter extends ImageToImageFilter {\n\n  constructor(){\n    super();\n\n    // both input are images.\n    this._inputValidator[ 0 ] = Image2D.TYPE();\n    this._inputValidator[ 1 ] = Image2D.TYPE();\n  }\n\n\n  /**\n  * Run the filter\n  */\n  update(){\n    // filter must have valid input of the same size\n    if( !this.hasSameSizeInput() || !this.hasValidInput()){\n      return;\n    }\n\n    var dataImg0 = this._getInput(0);\n    var dataImg1 = this._getInput(1);\n\n    // the input \"1\" (aka. the scaling data) must be single band\n    if( dataImg1.getComponentsPerPixel() != 1 ){\n      console.warn(\"The scaling image must have one single band.\");\n      return;\n    }\n\n    var nbOfPixels = dataImg0.getWidth() * dataImg0.getHeight();\n    var ncpp = dataImg0.getComponentsPerPixel();\n\n    var data0 = dataImg0.getDataCopy();\n    var data1 = dataImg1.getData();\n\n    // scale the spectral info\n    for(var p=0; p<nbOfPixels; p++){\n      for(var b=0; b<ncpp; b++){\n        data0[ p*ncpp + b ] *=  data1[p];\n      }\n    }\n\n    // building the output\n    var img2D = new Image2D();\n    img2D.setData( data0, dataImg0.getWidth(), dataImg0.getHeight());\n    this._setOutput( img2D );\n\n  }\n\n\n} /* END class SpectralScaleImageFilter */\n\nexport { SpectralScaleImageFilter }\n","'use strict'\n\n//import mathjs from 'mathjs';\n\n// core classes\nexport { PixpipeObject } from './core/PixpipeObject.js';\nexport { Filter } from './core/Filter.js';\nexport { Image2D } from './core/Image2D.js';\nexport { ImageToImageFilter } from './core/ImageToImageFilter.js';\nexport { PixelWiseImageFilter } from './core/PixelWiseImageFilter.js';\n\n// io - Readers and writers\nexport { CanvasImageWriter } from './io/CanvasImageWriter.js';\nexport { UrlImageReader } from './io/UrlImageReader.js';\nexport { FileImageReader } from './io/FileImageReader.js';\n\n// filters - processing of Images2D\nexport { ForEachPixelImageFilter } from './filter/ForEachPixelImageFilter.js';\nexport { SpectralScaleImageFilter } from './filter/SpectralScaleImageFilter.js';\n//export { SpatialConvolutionFilter } from './filter/SpatialConvolutionFilter.js';\n//export { ImageBlendExpressionFilter } from './filter/ImageBlendExpressionFilter.js';\n\n\n// filters - processing of Image3D\n"],"names":["Filter"],"mappings":"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"}