{"version":3,"file":"pixpipe.js","sources":["../src/core/PixpipeObject.js","../src/core/Filter.js","../src/core/Image2D.js","../src/core/ImageToImageFilter.js","../src/core/PixelWiseImageFilter.js","../src/io/CanvasImageWriter.js","../src/io/UrlImageReader.js","../src/io/FileImageReader.js","../src/filter/ForEachPixelImageFilter.js","../src/pixpipe.js"],"sourcesContent":["/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\n/**\n* PixpipeObject is the base object of all. It creates a uuid and has few\n* generic attributes like type, name and description. Not all these attributes\n* always useful;\n*/\nclass PixpipeObject {\n\n  constructor(){\n    // unique identifier\n    this._uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n      return v.toString(16);\n    });\n\n    this._name = null;\n    this._description = null;\n    this._type = PixpipeObject.TYPE();\n  }\n\n\n  /**\n  * Acces it like a static attribute.\n  * Must be overloaded.\n  */\n  static TYPE(){\n    return \"GENERIC\";\n  }\n\n\n  /**\n  * Compare a give type to the type of this object.\n  * @param {String} t - a type, better to call the static method of each object, like Image.TYPE()\n  */\n  isOfType( t ){\n    return !(this._type.localeCompare(t))\n  }\n\n\n  /**\n  * Get type of object.\n  * @return {String} the type\n  */\n  getType(){\n    this._type;\n  }\n\n  /**\n  * Return a copy of the uuid\n  */\n  get uuid(){\n    return this._uuid.slice();\n  }\n\n\n  /**\n  * Setter fo the name.\n  * @param {String} n - name\n  */\n  setName( n ){\n    this._name = n;\n  }\n\n\n  /**\n  * Getter for the name\n  * @return {String} name\n  */\n  getName(){\n    return this._name;\n  }\n\n\n  /**\n  * Setter fo the description.\n  * @param {String} d - description\n  */\n  setDescription( d ){\n    this._description = d;\n  }\n\n\n  /**\n  * Getter for the description\n  * @return {String} description\n  */\n  getDescription(){\n    return this._description;\n  }\n\n\n}\n\nexport { PixpipeObject }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { PixpipeObject } from './PixpipeObject.js';\n\n/**\n* Filter is a base class and must be inherited to be used properly.\n* A filter takes one or more Image instances as input and returns one or more\n* instances of images as output.\n* Every filter has a addInput(), a getOutput() and a update() methods.\n* Every input and output can be arranged by category, so that internaly, a filter\n* can use and output diferent kind of data.\n*/\nclass Filter extends PixpipeObject {\n\n  constructor(){\n    super();\n    this._type = Filter.TYPE();\n\n    this._inputValidator = {};\n\n    this._input = {\n      \"0\": []\n    };\n\n    this._output = {\n      \"0\" : []\n    };\n\n  }\n\n\n  /**\n  * Hardcode the datatype\n  */\n  static TYPE(){\n    return \"FILTER\";\n  }\n\n  /**\n  * Set an input, potentially associated to a category.\n  * @param {Image2D} inputObject - most likely an instance of Image2D but can also be HTML5 File or Image3D\n  * @param {Number} category - in case we want to get data from diferent categories.\n  */\n  addInput( inputObject, category=0){\n\n    if(category < 0 ){\n      console.warn(\"A input cannot be of category inferior to zero\");\n      return;\n    }\n\n    // the category may not exist, we create it\n    if( !(category in this._input) ){\n      this._input[category] = null;\n    }\n\n    this._input[category] = inputObject ;\n  }\n\n\n  /**\n  * Return outputs from a category (default category: 0)\n  * @param {Number} category - a category of output.\n  * @return {Object} or null if no output can be returned.\n  */\n  getOutput( category=0 ){\n    if( category in this._output ){\n      return this._output[ category ];\n    }else{\n      return null;\n    }\n  }\n\n\n  /**\n  * [PRIVATE]\n  * should noly be used by the class that inherit Filter.\n  * This is just a wraper to not access the raw _output object.\n  * @param {Image2D} imageObject - instance of an image\n  * @param {Number} category - in case we want to get data from different categories.\n  */\n  _setOutput( data, category=0 ){\n    // the category may not exist, we create it\n    if( !(category in this._output) ){\n      this._output[category] = null;\n    }\n\n    this._output[category] = data ;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * should noly be used by the class that inherit Filter.\n  * @param {Number} category - in case we want to get data from different categories.\n  * @return {Object} or null if no input can be returned\n  */\n  _getInput( category=0 ){\n    if( category in this._input ){\n      return this._input[ category ];\n    }else{\n      return null;\n    }\n  }\n\n\n  /**\n  * Validate the input data using a model defined in _inputValidator.\n  * Every class that implement Filter must implement their own _inputValidator.\n  * Not mandatory to use, still a good practice.\n  */\n  hasValidInput(){\n    var that = this;\n    var inputCategories = Object.keys( this._inputValidator );\n\n    var valid = true;\n\n    inputCategories.forEach( function(key){\n      valid = valid && that._getInput( key ).isOfType( that._inputValidator[ key ] )\n    });\n\n    return valid;\n  }\n\n\n  /**\n  * MUST be implemented by the class that inherit this.\n  * Launch the process.\n  */\n  update(){\n    console.error(\"The update() method has not been written, this filter is not valid.\");\n  }\n\n\n} /* END class Filter */\n\nexport { Filter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { PixpipeObject } from './PixpipeObject.js';\n\n/**\n* Image2D class is one of the few base element of Pixpipejs.\n* It is always considered to be 4 channels (RGBA) and stored as a Float32Array\n* typed array.\n*/\nclass Image2D extends PixpipeObject{\n\n\n  /**\n  * Constructor of an Image2D instance. If no options, no array is allocated.\n  * @param {Object} options - if present, must have options.width, options.height. Also options.color = [r, g, b, a] is possible but not mandatory, this sets the default color.\n  */\n  constructor( options=null ){\n    super();\n    this._type = Image2D.TYPE();\n\n    // a rgba stored in a Float32Array (typed array)\n    this._data = null;\n    this._width = -1;\n    this._height = -1;\n    this._componentsPerPixel = 4; // RGBA\n\n    // allocate the array if size is specified\n    if(options && \"width\" in options && \"height\" in options){\n\n      if( options.width > 0 && options.height > 0){\n        this._width = options.width;\n        this._height = options.height;\n        this._data = new Float32Array( this._width * this._height * this._componentsPerPixel );\n\n        // init the color if specified\n        if(\"color\" in options && options.color.length == 4 ){\n          var color = options.color;\n\n          for(var i=0; i<this._data.length; i+=4){\n            this._data[i] = color[0];\n            this._data[i + 1] = color[1];\n            this._data[i + 2] = color[2];\n            this._data[i + 3] = color[3];\n          }\n\n          console.log(this._data);\n        }\n      }\n    }\n\n\n  }\n\n\n  /**\n  * Hardcode the datatype\n  */\n  static TYPE(){\n    return \"IMAGE2D\";\n  }\n\n\n  /**\n  * @return {Image2D} a deep copy instance of this Image2D\n  */\n  clone(){\n    var cpImg = new Image2D();\n    cpImg.setData( this._data, this._width, this._height );\n    return cpImg;\n  }\n\n\n  /**\n  *  Set the data to this Image2D.\n  * @param {Float32Array} array - 1D array of raw data stored as RGBARGBA...\n  * @param {Number} width - width of the Image2D\n  * @param {Number} height - height of the Image2D\n  */\n  setData( array, width, height ){\n    // do not alloz to set a new internal array\n    if( this._data ){\n      console.warn(\"Data can be set to an Image2D object only once. Cannot init the Image2D.\");\n      return;\n    }\n\n    if( array.length != width*height*this._componentsPerPixel){\n      console.warn(\"The array size does not match the width and height. Cannot init the Image2D.\");\n      return;\n    }\n\n    this._data = new Float32Array( array );\n    this._width = width;\n    this._height = height;\n\n  }\n\n\n  /**\n  * @return {Number} the width of the Image2D\n  */\n  getWidth(){\n    return this._width;\n  }\n\n\n  /**\n  * @return {Number} the height of the Image2D\n  */\n  getHeight(){\n    return this._height;\n  }\n\n\n  /**\n  * @return {Number} the number of components per pixel\n  */\n  getComponentsPerPixel(){\n    return this._componentsPerPixel;\n  }\n\n\n  /**\n  * @return {Float32Array} the original data, dont mess up with this one.\n  * in case of doubt, use  getDataCopy()\n  */\n  getData(){\n    //return this._data.slice();  // return a copy\n    return this._data;  // return the actual array, editable!\n  }\n\n\n  /**\n  * @return {Float32Array} a deep copy of the data\n  */\n  getDataCopy(){\n    return this._data.slice();\n  }\n\n\n  /**\n  * Compute the (x, y) position from a position in a 1D array.\n  * @param {Number} i - the index of a pixel. This has nothing to do with\n  * the number of components per pixel.\n  * @return {Object} coordinate as {x, y}\n  */\n  get2dPositionFrom1dIndex( i ){\n    return {\n      x: i % this._width,\n      y: Math.floor(i / this._width)\n    }\n  }\n\n} /* END of class Image2D */\n\nexport { Image2D }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Filter } from './Filter.js';\nimport { Image2D } from './Image2D.js';\n\n/**\n* ImageToImageFilter is not to be used as-is but rather as a base class for any\n* filter that input a single Image2D and output a single Image2D.\n* This class does not overload the update() method.\n*/\nclass ImageToImageFilter extends Filter {\n\n  constructor(){\n    super();\n    this._inputValidator[ 0 ] = Image2D.TYPE();\n\n    // will be a copy of the input Image2D buffer\n    this._inputBuffer = null;\n  }\n\n} /* END class ImageToImageFilter */\n\nexport { ImageToImageFilter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { ImageToImageFilter } from './ImageToImageFilter.js';\n\n/**\n* PixelWiseImageFilter is not supposed to be use as is and is just to\n* be inherited by other filters.\n* This class does not overload the update() method.\n*/\nclass PixelWiseImageFilter extends ImageToImageFilter{\n\n  constructor(){\n    super();\n\n  }\n\n\n  /**\n  * [PRIVATE]\n  * generic function for painting row, colum or whole\n  * @param {Number} firstPixel - Index of the first pixel in 1D array\n  * @param {Number} lastPixel - Index of the last pixel in 1D array\n  * @param {Number} increment - jump gap from a pixel to another (in a 1D style)\n  * @param {function} cb - callback of what to do for each pixel to be processed. Called with 2 args: 2D position {x, y} and color {r, g, b, a}\n  */\n  _forEachPixelOfSuch(firstPixel, lastPixel, increment, cb ){\n    var inputImage2D = this._getInput();\n    var inputBuffer = this._inputBuffer;\n    var componentPerPixel = inputImage2D.getComponentsPerPixel();\n\n    var currentColor = null;\n\n    for(var p=firstPixel; p<lastPixel; p+=increment ){\n      var firstCompoPos1D = p * componentPerPixel;\n      var position2D = inputImage2D.get2dPositionFrom1dIndex(p);\n      currentColor = inputBuffer.slice(firstCompoPos1D, firstCompoPos1D + componentPerPixel)\n\n      var newColor = cb( position2D, currentColor);\n\n      if(newColor && newColor.length == componentPerPixel){\n        for(var i=0; i<componentPerPixel; i++){\n          inputBuffer[firstCompoPos1D + i] = newColor[i];\n        }\n      }\n\n    }\n  }\n\n\n} /* END of class PixelWiseImageFilter */\n\nexport { PixelWiseImageFilter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { Filter } from '../core/Filter.js';\n\n/**\n* CanvasImageWriter is a filter to output an instance of Image into a\n* HTML5 canvas element.\n* usage: examples/imageToCanvasFilter.html\n*\n* @example\n// create an image\n* var myImage = new pixpipe.Image2D({width: 100, height: 250, color: [255, 128, 64, 255]})\n*\n* // create a filter to write the image into a canvas\n* var imageToCanvasFilter = new pixpipe.CanvasImageWriter( \"myDiv\" );\n* imageToCanvasFilter.addInput( myImage );\n* imageToCanvasFilter.update();\n*/\nclass CanvasImageWriter extends Filter{\n\n  /**\n  * @param {String} idOfParent - dom id of the future canvas' parent.\n  * (most likely the ID of a div)\n  */\n  constructor( idOfParent){\n    // call Filter constructor\n    super();\n\n    this._inputValidator[ 0 ] = Image2D.TYPE();\n\n    // so that we can flush the content\n    this._parentId = idOfParent;\n    this._canvas = null;\n    this._ctx = null;\n  }\n\n\n  /**\n  * [PRIVATE]\n  * Initialize a new canvas object\n  */\n  _init(){\n    var parentElem = document.getElementById(this._parentId);\n    while (parentElem.firstChild) {\n        parentElem.removeChild(parentElem.firstChild);\n    }\n\n    // creating a canvas element\n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.style = \"image-rendering: pixelated;\";\n    this._ctx = this._canvas.getContext('2d');\n\n    // not sure this is useful since the style is \"pixelated\"\n    // (does not seem to well super well with Firefox)\n    this._ctx.imageSmoothingEnabled = true;\n    this._ctx.mozImageSmoothingEnabled = false;\n    this._ctx.webkitImageSmoothingEnabled = false;\n    this._ctx.ctxmsImageSmoothingEnabled = false;\n\n    document.getElementById(this._parentId).appendChild(this._canvas);\n  }\n\n\n  /**\n  * Overwrite the generic (empty) method.\n  */\n  update(){\n\n    // abort if invalid input\n    if(!this.hasValidInput())\n      return;\n\n    // build a new canvas\n    this._init();\n\n    var image = this._input[0];\n\n    // resizing the canvas\n    this._canvas.width = image.getWidth();\n    this._canvas.height = image.getHeight();\n\n    var canvasImageData = this._ctx.getImageData(0, 0, this._canvas.width, this._canvas.height);\n    var canvasImageDataArray = canvasImageData.data;\n\n    // getting Image object data\n    var originalImageDataArray = image.getData();\n\n    // copying the data into the canvas array (clamped uint8)\n    originalImageDataArray.forEach( function(value, index){\n      canvasImageDataArray[index] = value;\n    });\n    this._ctx.putImageData(canvasImageData, 0, 0);\n\n\n\n  }\n\n}\n\nexport { CanvasImageWriter }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { Filter } from '../core/Filter.js';\n\n\n/**\n* An instance of UrlImageReader takes an image URL as input and\n* returns an Image2D as output. Use the regular `addInput()` and `getOuput()`\n* with no argument for that.\n* Reading a file from URL takes an AJAX request, which is asynchronous. For this\n* reason, what happens next, once the Image2D is created must take place in the\n* callback defined in the constructor.\n*\n* Usage: examples/urlToImage2D.html\n*\n* @example\n* var url2ImgFilter = new pixpipe.UrlImageReader( ... );\n* url2ImgFilter.addInput( \"images/sd.jpg\" );\n* url2ImgFilter.update();\n*/\nclass UrlImageReader extends Filter {\n\n  /**\n  * @param {function} callback - function to call when the image is loaded.\n  * The _this_ object will be in argument of this callback.\n  */\n  constructor( callback ){\n    super();\n\n    this._onReadCallback = callback;\n  }\n\n\n  /**\n  * Run the reading\n  */\n  update(){\n    var that = this;\n\n    var img = new Image();\n    img.src = this._getInput();\n\n    img.onload = function() {\n      var tmpCanvas = document.createElement(\"canvas\");\n      tmpCanvas.width = img.width;\n      tmpCanvas.height = img.height;\n      var canvasContext = tmpCanvas.getContext('2d');\n      canvasContext.drawImage(img, 0, 0);\n\n      try{\n\n        var imageData = canvasContext.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height);\n        var dataArray = imageData.data;\n        var img2D = new Image2D();\n        img2D.setData( dataArray, img.width, img.height);\n        that._setOutput( img2D );\n\n        that._onReadCallback && that._onReadCallback( that );\n      }catch(e){\n        //console.error(\"The server of the specified image URL does not allow Cross Origin data access. Pixpipe cannot create an Image2D object.\");\n\n        console.error(e);\n      }\n\n    };\n\n\n  }\n\n\n} /* END of class UrlImageReader */\n\nexport { UrlImageReader }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { Filter } from '../core/Filter.js';\n\n/**\n* An instance of FileImageReader takes a HTML5 File object as input and\n* returns an Image2D as output. The point is mainly to use it with a file dialog.\n* Use the regular `addInput()` and `getOuput()` with no argument for that.\n* Reading a local file is an asynchronous process. For this\n* reason, what happens next, once the Image2D is created must take place in the\n* callback defined in the constructor.\n*\n* Usage: examples/fileToImage2D.html\n*\n* @example\n* var file2ImgFilter = new pixpipe.file2ImgFilter( ... );\n* file2ImgFilter.addInput( fileInput.files[0] );\n* file2ImgFilter.update();\n*/\nclass FileImageReader extends Filter {\n\n  /**\n  * @param {function} callback - function to call when the image is loaded.\n  * The _this_ object will be in argument of this callback.\n  */\n  constructor( callback){\n    super();\n\n    this._allowedTypes = /image.*/;\n    this._onReadCallback = callback;\n  }\n\n\n  /**\n  * Overload the default method because HTML5 File is not a Pixpipe type\n  */\n  hasValidInput(){\n    var valid = false;\n    var file = this._getInput();\n\n    if (file && file.type.match( this._allowedTypes )) {\n      this._isInputValid = true;\n    }else{\n      console.error(\"The file must be an image (jpg/png). The type \" + file.type + \" is not compatible with FileImageReader.\");\n    }\n\n    return valid;\n  }\n\n\n  /**\n  * Run the reading\n  */\n  update(){\n\n    if(! this.hasValidInput)\n      return\n\n    var that = this;\n    var file = this._getInput();\n\t\tvar reader = new FileReader();\n\n\t\treader.onload = function(e) {\n\n\t\t\tvar img = new Image();\n\t\t\timg.src = reader.result;\n      var tmpCanvas = document.createElement(\"canvas\");\n      tmpCanvas.width = img.width;\n      tmpCanvas.height = img.height;\n      var canvasContext = tmpCanvas.getContext('2d');\n      canvasContext.drawImage(img, 0, 0);\n      var imageData = canvasContext.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height);\n      var dataArray = imageData.data;\n\n      var img2D = new Image2D();\n      img2D.setData( dataArray, img.width, img.height);\n      console.log(img2D);\n      that._setOutput( img2D );\n\n      that._onReadCallback && that._onReadCallback( that );\n\t\t}\n\n\t\treader.readAsDataURL( file );\n  }\n\n\n\n} /* END of class UrlImageReader */\n\nexport { FileImageReader }\n","/*\n* Author   Jonathan Lurie - http://me.jonahanlurie.fr\n* License  MIT\n* Link      https://github.com/jonathanlurie/pixpipejs\n* Lab       MCIN - Montreal Neurological Institute\n*/\n\nimport { Image2D } from '../core/Image2D.js';\nimport { PixelWiseImageFilter } from '../core/PixelWiseImageFilter.js';\n\n/**\n*\n*/\nclass ForEachPixelImageFilter extends PixelWiseImageFilter {\n\n  /**\n  * @param {function} cb - callback of what to do for each pixel\n  */\n  constructor( cb = null ){\n    super();\n    this._perPixelCallback = cb;\n  }\n\n\n  /**\n  * Run the filter\n  */\n  update(){\n    if( ! this.hasValidInput())\n      return;\n\n    var inputImage2D = this._getInput();\n    var firstPixel = 0;\n    var lastPixel = inputImage2D.getWidth() * inputImage2D.getHeight();\n    var increment = 1;\n\n    this._inputBuffer = inputImage2D.getDataCopy();\n\n    this._forEachPixelOfSuch(firstPixel, lastPixel, increment, this._perPixelCallback );\n\n    // building the output\n    var img2D = new Image2D();\n    img2D.setData( this._inputBuffer, inputImage2D.getWidth(), inputImage2D.getHeight());\n    this._setOutput( img2D );\n  }\n\n} /* END class ForEachPixelImageFilter */\n\nexport { ForEachPixelImageFilter }\n","'use strict'\n\n// core classes\nexport { PixpipeObject } from './core/PixpipeObject.js';\nexport { Filter } from './core/Filter.js';\nexport { Image2D } from './core/Image2D.js';\nexport { ImageToImageFilter } from './core/ImageToImageFilter.js';\nexport { PixelWiseImageFilter } from './core/PixelWiseImageFilter.js';\n\n// io - Readers and writers\nexport { CanvasImageWriter } from './io/CanvasImageWriter.js';\nexport { UrlImageReader } from './io/UrlImageReader.js';\nexport { FileImageReader } from './io/FileImageReader.js';\n\n// filters - processing of Images2D\nexport { ForEachPixelImageFilter } from './filter/ForEachPixelImageFilter.js';\n\n// filters - processing of Image3D\n"],"names":[],"mappings":"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"}